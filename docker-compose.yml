version: '3.7'
services:
  angular:
    container_name: angular
    build:
      context: ./angular
      dockerfile: Dockerfile
    volumes: 
      - angular_dist_volume:/app/dist/angular
    depends_on:
      - nestjs 

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5432:5432"
    networks:
      - my-network
    volumes:
      - pg_data:/var/lib/postgresql/data

  nestjs:
    container_name: nestjs
    build:
      context: ./nestjs
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - my-network
    depends_on:
      - postgres 
    restart: always

  nginx:
    container_name: nginx
    image: nginx:latest
    expose:
      - "80"
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./rentx.conf:/etc/nginx/conf.d/rentx.conf
      - angular_dist_volume:/var/www/rentx.fr
      - /etc/letsencrypt/live/rentx.fr/fullchain.pem:/etc/letsencrypt/live/rentx.fr/fullchain.pem
      - /etc/letsencrypt/live/rentx.fr/privkey.pem:/etc/letsencrypt/live/rentx.fr/privkey.pem

    depends_on:
      - angular
    restart: unless-stopped
    networks:
      - my-network

volumes:
  angular_dist_volume: {}
  pg_data:
  
networks:
  my-network:
    driver: bridge