server {
    listen 80;
    listen [::]:80;
    server_name rentx.fr www.rentx.fr;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name rentx.fr www.rentx.fr;

    ssl_certificate /etc/letsencrypt/live/rentx.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rentx.fr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        root /var/www/rentx.fr;
        try_files $uri $uri/ /index.html;
        index index.html;
        
        # Disable cache for index.html
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        expires 0;
    }

    # Cache static assets with versioning
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        root /var/www/rentx.fr;
        expires 1y;
        add_header Cache-Control "public, no-transform";
    }

    location /api {
        proxy_pass http://nestjs:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /prospector/api {
        resolver 127.0.0.11 valid=30s;
        set $upstream_python "http://python:8000";
        proxy_pass $upstream_python;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_intercept_errors on;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        error_page 500 502 503 504 = @prospector_fallback;
    }

    location @prospector_fallback {
        return 503 '{"error": "Prospector service temporarily unavailable"}';
        add_header Content-Type application/json;
    }
}
